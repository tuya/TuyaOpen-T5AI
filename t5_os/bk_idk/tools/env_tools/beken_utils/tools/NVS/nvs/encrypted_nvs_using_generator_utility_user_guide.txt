0, encrypt the nvs binary file generated by csv file with generating the nvs key
  python3 ./nvs_partition_gen.py encrypt ./sample_singlepage_blob.csv nvs_enc.bin 0x10000 --keygen --keyfile key.bin
  0.0 the script is at the folder:nvs_flash_5.1.1/nvs_partition_generator;
  0.1 Creating NVS binary with version: V2 - Multipage Blob Support Enabled;
      Created NVS binary: ===>nvs_enc.bin
  0.2 pay attention to the python version;
  0.3 0x10000 at the demo command is the nvs partition size. if the real size of nvs partition is not equal to the size, maybe error will arise;

1, encrypt the key binary file using flash aes key based on partition setting
  1.0, obtain the flash aes key, that is provisioning flash aes key when enable flash Security_Data_Enable;
       for example:73c7bf397f2ad6bf4e7403a7b965dc5ce0645df039c2d69c814ffb403183fb18
  1.1, know the nvs_key partition physical address;
       for instance: 0x3e2000
  1.2, process the key bin file;
       ./beken_aes encrypt -infile keys.bin -startaddress 0x3a7860  -keywords 73c7bf397f2ad6bf4e7403a7b965dc5ce0645df039c2d69c814ffb403183fb18 -outfile keys_enc.bin
       Attention:
                  startaddress is a virtual address; vir_addr = (partition_addr + 33) / 34 * 32;

2, burn key.bin and nvs_enc.bin;
  2.0 nvs_enc.bin: the download address is the partition start address(physical address);
  2.1 key.bin: you shall download key_enc_crc.bin, with align physical address, that maybe is not same as nvs_key partition start address;
	

